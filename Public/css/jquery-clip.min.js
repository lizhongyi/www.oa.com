/*
	Author:It小莫(liyu);
	date:2013-05-15;
	QQ:414329354;
	blog:http://www.smallmo.com/;
*/

(function($){
	 function clip(options){
		this.init.call(this,options);	
     }
	clip.prototype = {
		options :{
			moveCallBack : function(){},
			className : "block"
		},
		init : function(options){			
			$.extend(this,this.options,options||{});
			if(!this.container || !this.imgC){
				return;
			}
			this.container = $(this.container);
			var self = this;
			this.block = $('<div class="'+this.className+'">\
					<div action="rightDown" class="rRightDown"></div>\
					<div action="leftDown" class="rLeftDown"></div>\
					<div action="rightUp" class="rRightUp"></div>\
					<div action="leftUp" class="rLeftUp"></div>\
					<div action="right" class="rRight"></div>\
					<div action="left" class="rLeft"></div>\
					<div action="up" class="rUp"></div>\
					<div action="down" class="rDown" ></div>\
    			</div>').bind("mousedown.r",function(e){self.start(e)}).appendTo(container);
			this.setImg();
		},
		setImg : function(){
			var block = this.block;
			
			/*f( block.width() > 100){
				  
				dax=100;
				
				}else{
					dax=block.width();
					}*/
			this.imgC.css({
				
				height: block.height(),
				width : block.width(),
				"background-position" : "-"+block.css("left")+" -"+block.css("top")
			});		
		},
		start : function(e){						
			var $elem     = $(e.target),
				block     = this.block,
				self      = this,
				move      = false,
				container = this.container,
				action    = $elem.attr("action");
			//这个 每次都要计算 基本dom结构的改变 浏览器的缩放 都会让里面的值发生改变	
			this.offset = $.extend({height:container.height(),width:container.width()},container.offset());
			this.blockOriginal = {height:block.height(),width:block.width(),left:parseInt(block.css("left")),top:parseInt(block.css("top"))};
			if(action){
				this.fun = this[action];				
			}else{
				this.x = e.clientX - this.offset.left - this.blockOriginal.left ;
				this.y = e.clientY - this.offset.top - this.blockOriginal.top;
				move = true;
			}			
			$(document).bind("mousemove.r",function(e){self.move(e,move)}).bind("mouseup.r",function(){self.end()});			
		},
		end  : function(){
			$(document).unbind("mousemove.r").unbind("mouseup.r");
		},
		move : function(e,isMove){
			window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();
			var block = this.block;	
			if(isMove){
				var left = Math.max(0,e.clientX - this.offset.left - this.x);
				left = Math.min(left,this.offset.width - this.blockOriginal.width);
				var top = Math.max(0,e.clientY - this.offset.top - this.y);
				top = Math.min(top,this.offset.height - this.blockOriginal.height);
				block.css({left:left,top:top});				
			}else{
				var offset = this.fun(e);
				block.css(offset);
			}
			this.setImg();
			this.moveCallBack();
		},
		down : function(e){
			var blockOriginal = this.blockOriginal, 
				sTop = Math.max(document.body.scrollTop,document.documentElement.scrollTop), //出现垂直方向滚动条时候 要计算这个  
				offset = this.offset;
			if(e.clientY-offset.top>=blockOriginal.top-sTop){
				var height = Math.min(offset.height - blockOriginal.top,e.clientY-offset.top-blockOriginal.top+sTop),
					top = blockOriginal.top;
			}else{
				var height = Math.min(offset.top+blockOriginal.top-e.clientY-sTop,blockOriginal.top),
					top = Math.max(e.clientY - offset.top+sTop,0);
			}
			if(height>this.maxHeight){
				height=this.maxHeight;
			}
			return {height:height, top:top};
		},
		up : function(e){
			var blockOriginal = this.blockOriginal,
				sTop = Math.max(document.body.scrollTop,document.documentElement.scrollTop),
				offset = this.offset;
			if(e.clientY-offset.top-blockOriginal.height<=blockOriginal.top-sTop){
				var top = Math.max(e.clientY-offset.top+sTop,0),
					maxHeight = blockOriginal.top + blockOriginal.height,
					height = Math.min(maxHeight,blockOriginal.top + blockOriginal.height -(e.clientY-offset.top)-sTop);					
			}else{				
				var height = Math.min(e.clientY-offset.top-blockOriginal.top-blockOriginal.height+sTop,offset.height-blockOriginal.top-blockOriginal.height),
					top = blockOriginal.top+blockOriginal.height;		
			}
			if(height>this.maxHeight){
				height=this.maxHeight;
			}
			return {height:height, top:top};
		},
		left : function(e){
			var blockOriginal = this.blockOriginal,
				offset = this.offset;	
			if(e.clientX - offset.left - blockOriginal.width - blockOriginal.left<=0){
				var left  = Math.max(e.clientX - offset.left,0),
					width = Math.min(blockOriginal.left + blockOriginal.width,blockOriginal.left + blockOriginal.width -(e.clientX-offset.left));
			}else{
				var width = Math.min(e.clientX-offset.left-blockOriginal.left-blockOriginal.width,offset.width-blockOriginal.left-blockOriginal.width),
					left  = blockOriginal.left + blockOriginal.width;
			}
			if(width>this.maxWidth){
				width=this.maxWidth;
			}
			return {left : left,  width : width};
		},
		right : function(e){
			var blockOriginal = this.blockOriginal,
				offset = this.offset;
			if(e.clientX-offset.left>=blockOriginal.left){
				var width = Math.min(offset.width - blockOriginal.left,e.clientX - offset.left - blockOriginal.left),
					left  = blockOriginal.left;
			}else{
				var width = Math.min(offset.left + blockOriginal.left - e.clientX,blockOriginal.left),
					left  = Math.max(e.clientX - offset.left,0);
			}
			if(width>this.maxWidth){
				width=this.maxWidth;
			}
			return {left : left,  width : width};
		},
		rightDown : function(e){
			return $.extend(this.right(e),this.down(e));		
		},
		leftDown : function(e){
			return $.extend(this.left(e),this.down(e));
		},
		rightUp : function(e){
			return $.extend(this.right(e),this.up(e));
		},
		leftUp : function(e){
			return $.extend(this.left(e),this.up(e));
		},
		getValue : function(){
			var block = this.block;
			return {
				x1   : parseInt(block.css("left")),
				y1    : parseInt(block.css("top")),
				x2  : block.width()+parseInt(block.css("left")),
				y2 : block.height()+ parseInt(block.css("top"))
			}
		},
		bili :{4:3}
	}
	$.fn.clip = function(options){
		options.container = this;
		return new clip(options);
	}
})(jQuery);
//https://github.com/wintercn/blog/issues/5
//https://github.com/06wj/FL/tree/master/js